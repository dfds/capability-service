swagger: "2.0"
info:
  version: 1.0.0
  title: Cognito sidecar API
basePath: /
tags: 
  - name: System
    description: System and healt check endpoints
  - name: Teams
    description: Access to teams
  - name: AWS
    description: AWS related endpoints
consumes: 
  - "application/json"
produces:
  - "application/json"

paths:
  /system/health:
    get:
      tags:
      - System
      summary: Healthcheck
      responses:
        200:
          description: OK
      parameters:
      - name: deep
        in: query
        required: false
        type: boolean
        description: Test external dependencies 

  /aws/console:
    get:
      tags:
      - AWS
      summary: Construct a link for AWS Console
      parameters:
      - in: query
        name: idToken
        type: string
        description: The numbers of items to return
      responses:
        200:
          description: OK - Successful operation
          schema:
            $ref: "#/definitions/AWSConsoleLinkResponse"
  /api/teams:
    get:
      summary: Returns list of available teams
      tags:
        - Teams
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/team-list"
    post:
      summary: Creates a new team
      tags:
        - Teams
      parameters:
        - name: body
          in: body
          required: true
          description: Team that needs to be stored
          schema:
            $ref: "#/definitions/team-input"
      responses:
        201:
          description: Created - stored a new team
          schema:
            $ref: "#/definitions/team"
          headers:
            location:
              type: string
              description: A URI to a location when the team can be retrieved
        400:
          description: Bad request. name can not be empty.
        409:
          description: A team with the given name already exists
  /api/teams/{id}:
    get:
      summary: Returns a single team
      tags:
        - Teams
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/team"
  /api/teams/{id}/members:
    post:
      summary: Lets a user join a team
      tags:
        - Teams
      parameters:
        - name: id
          in: path
          required: true
          description: Id of the team that the user wants to join
          type: string
        - name: body
          in: body
          required: true
          description: Id of user that wants to join the team
          schema:
            type: object
            properties:
              userId:
                type: string                
      responses:
        200:
          description: OK - user has joined the team
          schema:
            $ref: '#/definitions/user'
        409:
          description: Conflict - user alread part of the team
          schema:
            type: object
            properties:
              message:
                type: string
                example: User is already part of the team

definitions:
  team-list:
    type: object
    properties:
      items:
        type: array
        items:
          $ref: "#/definitions/team"

  team:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      department:
        type: string
      members:
        type: array
        items:
          $ref: "#/definitions/user"

  team-input:
    type: object
    properties:
      name: 
        type: string
      department:
        type: string
  user:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      email:
        type: string

  AWSConsoleLinkResponse:
    type: object
    properties:
      absoluteUrl:
        type: string
        