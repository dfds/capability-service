swagger: '2.0'
info:
  version: 0.0.1
  title: Capability Service
  description: The authority of all things CAPABILITY related!
consumes:
  - application/json
produces:
  - application/json
schemes: 
  - http
host: localhost:5000
basePath: /api/v1/
paths:
  /capabilities: 
    get:
      summary: Returns a list of capabilities
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/capability-list'
    post:
      summary: Create a new capability
      parameters: 
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              name:
                type: string
              description:
                type: string
      responses:
        201:
          description: Created
          headers:
            location:
              type: string
              description: URI where the capability can be retrieved
          schema:
            $ref: '#/definitions/capability'
        400:
          description: BadRequest
          schema:
            $ref: '#/definitions/errorObject'
  /capabilities/{capabilityId}:
    get:
      summary: Returns a single capability
      parameters:
        - in: path
          name: capabilityId
          type: string
          required: true
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/capability'
    put:
      summary: Update the info fields on a single capability
      parameters:
        - in: path
          name: capabilityId
          type: string
          required: true
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              name:
                type: string
              description:
                type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/capability'
        400:
          description: BadRequest
          schema:
            $ref: '#/definitions/errorObject'
        404:
          description: Not found
  /capabilities/{capabilityId}/members:
    post:
      summary: Adds a person to a capability 
      parameters:
        - in: path
          name: capabilityId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              email:
                type: string
      responses:
        200:
          description: Ok
        404:
          description: Not Found
          schema:
            $ref: '#/definitions/errorObject'
  /capabilities/{capabilityId}/members/{email}:
    delete:
      summary: Deletes a person from a capability 
      parameters:
        - in: path
          name: capabilityId
          required: true
          type: string
        - in: path
          name: email
          type: string
          required: true
      responses:
        200:
          description: Ok
        404:
          description: Not Found
  /capabilities/{capabilityId}/contexts:
    post:
      summary: Adds a context to a capability 
      parameters:
        - in: path
          name: capabilityId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              name:
                type: string
      responses:
        200:
          description: Ok
        404:
          description: Not Found
          schema:
            $ref: '#/definitions/errorObject'
  /topics: 
      post:
        summary: Create a new topic
        parameters: 
          - in: body
            name: body
            required: true
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                visibility:
                  type: string
        responses:
          201:
            description: Created
            headers:
              location:
                type: string
                description: URI where the topic can be retrieved
            schema:
              $ref: '#/definitions/topic'
          400:
            description: BadRequest
            schema:
              $ref: '#/definitions/errorObject'
  /topics/{topicName}:
    get:
      summary: Returns a single topic
      parameters:
        - in: path
          name: topicName
          type: string
          required: true
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/topic'
  /topics/{topicName}/messageExamples:
    post:
      summary: Adds a message example to a topic 
      parameters:
        - in: path
          name: topicName
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              messageType:
                type: string
              text:
                type: string
    responses:
      200:
        description: Ok
      404:
        description: Not Found
        schema:
          $ref: '#/definitions/errorObject'
definitions:
  capability-list:
    type: object
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/capability'
  capability:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      description:
        type: string
      rootId:
        type: string
      members:
        type: array
        items:
          $ref: '#/definitions/member'
      contexts:
        type: array
        items:
          $ref: '#/definitions/context'
  member:
    type: object
    properties:
      email:
        type: string
  context:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      awsAccountId:
        type: string
      awsRoleArn:
        type: string
      awsRoleEmail:
        type: string
  errorObject:
    type: object
    properties:
      message:
        type: string
  topic:
    type: object
    properties:
      name:
        type: string
      description:
        type: string
      visibility:
        type: string
      messageExamples:
        type: array
        items:
          $ref: '#/definitions/messageExample'
  messageExample:
    type: object
    properties:
      id:
        type: string
      messageType:
        type: string
      text:
        type: string        